# Supabase Creation

create table public.users (
  id uuid not null,
  email text not null,
  constraint users_pkey primary key (id),
  constraint users_email_key unique (email)
) TABLESPACE pg_default;

create table public.canvases (
  id uuid not null default gen_random_uuid (),
  name text not null,
  created_at timestamp with time zone not null default now(),
  owner_id uuid not null,
  final_budget_per_day integer null,
  final_total_days integer null,
  final_location_ids text[] null,
  final_proposal jsonb null,
  final_itinerary jsonb null,
  constraint canvases_pkey primary key (id),
  constraint canvases_owner_id_fkey foreign KEY (owner_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.canvas_proposals (
  id uuid not null default gen_random_uuid (),
  canvas_id uuid not null,
  cities text[] not null,
  description text null,
  tag text not null,
  constraint canvas_proposals_pkey primary key (id),
  constraint canvas_proposals_canvas_id_fkey foreign KEY (canvas_id) references canvases (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.canvas_items (
  id uuid not null default gen_random_uuid (),
  canvas_id uuid not null,
  created_by uuid not null,
  type text not null,
  content jsonb null,
  position integer not null default 0,
  created_at timestamp with time zone not null default now(),
  constraint canvas_items_pkey primary key (id),
  constraint canvas_items_canvas_id_fkey foreign KEY (canvas_id) references canvases (id) on delete CASCADE,
  constraint canvas_items_created_by_fkey foreign KEY (created_by) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.canvas_collaborators (
  canvas_id uuid not null,
  user_id uuid not null,
  role text not null default 'editor'::text,
  budget numeric null,
  days bigint null,
  id bigint generated by default as identity not null,
  voted_location_ids uuid[] null,
  constraint canvas_collaborators_pkey primary key (id),
  constraint canvas_collaborators_canvas_id_fkey foreign KEY (canvas_id) references canvases (id) on delete CASCADE,
  constraint canvas_collaborators_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE,
  constraint canvas_collaborators_budget_check check ((budget > (0)::numeric)),
  constraint canvas_collaborators_days_check check ((days > 0))
) TABLESPACE pg_default;

create table public.decision_tree_questions (
  id uuid not null default gen_random_uuid (),
  canvas_id uuid not null,
  level integer not null,
  question_text text not null,
  option_a_tags text[] not null,
  option_a_text text not null,
  option_b_tags text[] not null,
  option_b_text text not null,
  status text not null default 'pending'::text,
  parent_option text null,
  constraint decision_tree_questions_pkey primary key (id),
  constraint decision_tree_questions_canvas_id_fkey foreign KEY (canvas_id) references canvases (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.live_poll_answers (
  id uuid not null default gen_random_uuid (),
  question_id uuid not null,
  user_id uuid not null,
  selected_option text not null,
  created_at timestamp with time zone not null default now(),
  constraint live_poll_answers_pkey primary key (id),
  constraint live_poll_answers_question_id_user_id_key unique (question_id, user_id),
  constraint live_poll_answers_question_id_fkey foreign KEY (question_id) references decision_tree_questions (id) on delete CASCADE,
  constraint live_poll_answers_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;